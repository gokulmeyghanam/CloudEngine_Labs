name: Container Deliverable Workflow

on:
  push:
    branches:
      - main

jobs:
  container-deliverable:
    runs-on: ubuntu-latest

    env:
      CONTAINER_REGISTRY: docker.io
      IMAGE_NAME: gokulmeyghanam/cloud-engine-lab
      CONTAINER_PORT: 8080 # Port to run the container
      HOST_PORT: 8080     # Port on the host machine

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and Push Docker Image
      - name: Build and Push Docker Image
        run: |
          docker build -t $CONTAINER_REGISTRY/$IMAGE_NAME:latest .
          docker push $CONTAINER_REGISTRY/$IMAGE_NAME:latest

      # Step 4: Run the Container on Specific Port
      - name: Run Docker Container
        run: |
          docker run -d -p $HOST_PORT:$CONTAINER_PORT --name test-container $CONTAINER_REGISTRY/$IMAGE_NAME:latest

      # Step 5: Create docker-compose.yml file
      - name: Create Docker Compose File
        run: |
          echo "version: '3.8'" > docker-compose.yml
          echo "services:" >> docker-compose.yml
          echo "  app:" >> docker-compose.yml
          echo "    image: $CONTAINER_REGISTRY/$IMAGE_NAME:latest" >> docker-compose.yml
          echo "    ports:" >> docker-compose.yml
          echo "      - \"$HOST_PORT:$CONTAINER_PORT\"" >> docker-compose.yml
          echo "Docker Compose File Content:"
          cat docker-compose.yml

      # Step 6: Upload docker-compose.yml as an artifact
      - name: Upload docker-compose.yml
        uses: actions/upload-artifact@v3
        with:
          name: docker-compose
          path: docker-compose.yml
